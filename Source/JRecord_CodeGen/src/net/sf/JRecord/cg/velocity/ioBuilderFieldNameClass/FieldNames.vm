package ${generateOptions.packageId}.schema;
#incl("schema/CommentSchema.pvm")

#*  *##set ($toAdd = "yes")
#*  *##foreach( $r in ${generateOptions.schemaDefinition.getRecords()}) 
//	${toAdd} $toAdd ${r.getArrayDetailsList().size()}
#*      *##if (${r.getArrayDetailsList().size()} > 0)
#*          *##if (${toAdd} == "yes")
import net.sf.JRecord.cgen.impl.ArrayFieldName;
import net.sf.JRecord.cgen.def.*;
#*              *##set ($toAdd = "no")
#*          *##end
#*      *##end
#*  *##end

public class FieldNames${generateOptions.schemaDefinition.extensionName} {

#*  *##set ($schemaDef = ${generateOptions.schemaDefinition})
#*  *##foreach( $r in ${generateOptions.schemaDefinition.getRecords()}) 
    public static final Record${r.extensionName} record${r.extensionName} = new Record${r.extensionName}();
#*  *##end    

#*  *##foreach( $r in ${generateOptions.schemaDefinition.getRecords()}) 
    public static class Record${r.extensionName} {
#*    *##foreach($f in ${r.getFields()}) 	
#*      *##if (! ${f.isArrayItem()})
       public final String ${f.javaName} = "${f.fieldDetail.getLookupName()}";
#*      *##end
#*    *##end 
	

#*    *##foreach($a in ${r.getArrayDetailsList()}) 
       public final IFieldName${a.getDimensionString()}Dimension ${a.getFirstElement().javaName} #*
    *# = new ArrayFieldName("${a.getFirstElement().cobolName}");
#*    *##end
	
    }


#*  *##end    
}

